12/10/2017 -- Collision and Mouse implementation
* Minimum Translation Vector -> MTV = n^ x d
[x] Correct mouse movement and mouse tracking via 'MouseEventListener'
* Mouse rectangle dragging

--------------------------------------------------------------------------------

15/10/2017 -- Circle Drawing
--- 19
Basic geometric formulas for circle: 
	https://en.wikipedia.org/wiki/Circle#Equations

Algorithm for implementig circle with midpoint dissplacement:
	https://en.wikipedia.org/wiki/Midpoint_circle_algorithm

--------------------------------------------------------------------------------

19/10/2017 -- Contact & Collision
--- 20
Definining distance between objects and checking it in every game iteration.

--------------------------------------------------------------------------------

24/10/2017 -- Contact generation and handling
--- 21
Distance registering between different geometrical types
[x] Square to line/plane
[x] Circle to line/plane
[ ] Circle to cirlce, happends when distance < radius
	* distance = distance between centers of circles - radius of both circles
		d = (A - B)/|A - B|
		and then normalize d
[ ] Circle to square
	* problem of square rotation
[ ]
[ ]

--------------------------------------------------------------------------------


            /* TODO(tomorrow): Write this down in your BLACK notebook!
               TODO(DUE date): Refresh design patterns!
                 -------------------------------------         -------------------         -------------------
                |                Body                 | ----> |  Geometric Shape  | ----> | Physical Material |
                 -------------------------------------         -------------------         -------------------
                                   |                             |-- Plane                  |-- xxx
                                   |                             |-- Circle                 |_ ...
                                   V                             |-- Square
                 -------------------------------------           |__ ...
                |   Integration    |   Acceleration   |
                 -------------------------------------
                                   |
                                   |
                                   V
                 ---------------------------------------
                |   Broadphase     | List pair spawning |
                 ---------------------------------------       -------------------      #############################
                |   Narrowphase    | Contact generation | --> | Contact generator | <== # Contact generator Factory #
                 ---------------------------------------       -------------------      #############################
                                   |                             |-- BodyA, BodyB
                                   |                             |__ ShapeA, ShapeB
                                   V                                    |-- Circle vs Circle generator
                 -------------------------------------                  |__ Plane vs Circle generator
                |  Contact solving |   Speed solving  |                       |__ TODO: Circle vs Plane -> flip
                 -------------------------------------
                                   |
                                   |
                                   V
                 -------------------------------------
                |    Integration   |      Speed       |
                 -------------------------------------
                                   |
                                   |
                                   V
                 -------------------------------------
                |         Position Correction         |
                 -------------------------------------
                                   |
                                   |
                                   V
                 -------------------------------------
                |                Cleaning             |
                 -------------------------------------
                                   |
                                 -----
                                  ---
                                   -
         */

    /*
     * Useful links:
     * https://stackoverflow.com/questions/1616448/broad-phase-collision-detection-methods
     * http://buildnewgames.com/broad-phase-collision-detection/
     * ------------------------------------------------------------------------------------------------------------
     * After the integration which is just down below, we generate/check for contacts between various shapes and
     * objects. We check them in pairs, iterate through lists of different objects, detect them and display them.
     * In the end of the process we check and correct the position of objects. That way we prevent slight
     * overlapping and misses of our detection model. We have iterate through list of contacts, check impulses
     * of both bodies, their ratios and correct them by applying scalar of product of correction and impulseWeight.
     */